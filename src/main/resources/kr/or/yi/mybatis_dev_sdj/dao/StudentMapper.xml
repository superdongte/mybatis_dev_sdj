<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.yi.mybatis_dev_sdj.dao.StudentMapper">
	<sql id ="selectSql">
		select stud_id as studId, name, email, dob, phone
		from students
	</sql>
	<sql id="where">
		<where>
		<if test="studId != null">
			stud_id = #{studId};
		</if>
		</where>
	</sql>
	
	<select id="selectStudentbyNo" parameterType="Student" resultType="Student">
		<!-- <include refid="selectSql"></include>
		<include refid="where"></include> -->
		select stud_id as studid, name, email, dob,phone
		from students
		where stud_id=#{studId};
	</select>
	
	<select id="selectStudentByAll" resultType="Student">
		<!-- <include refid="selectSql"></include> -->
		select stud_id as studid,name,email,dob,phone
		from students
	
	</select>
	<select id="insertStudent" parameterType="Student">
		INSERT INTO students
		(stud_id, name, email,phone,dob)
		VALUES(#{studId},#{name},#{email},#{phone},#{dob});
	</select>
	
	<select id="updateStudent" parameterType="Student">
		update students set 
		Name=#{name}, Email=#{email}, Phone=#{phone}, DOB=#{dob}
		where stud_id=#{studId}
	</select>
	
	<select id="deleteStudent" parameterType="int">
		delete from students
		where stud_id=#{studId}
	</select>
	<!-- resultMap -->
	<resultMap id="StudentResult" type="Student">
		<id property="studId" column="stud_id"/>
		<result property="name" column="name"/>
		<result property="email" column="email"/>
		<result property="phone" column="phone"/>
		<result property="dob" column="dob"/>
	</resultMap>
	
	<resultMap type="Student" id="StudentWithAdressResult" extends="StudentResult">
		<result property="address.addrId" column="addr_Id"/>
		<result property="address.street" column="street"/>
		<result property="address.city" column="city"/>
		<result property="address.state" column="state"/>
		<result property="address.zip" column="zip"/>
		<result property="address.country" column="country"/>
	</resultMap>
	
	<resultMap type="Student" id="StudentWithAdressResult2" extends="StudentResult">
		<id property="studId" column="stud_id"/>
		<result property="name" column="name"/>
		<result property="email" column="email"/>
		<result property="phone" column="phone"/>
		<result property="dob" column="dob"/>	
		<result property="address.addrId" column="addr_Id"/>
		<result property="address.street" column="street"/>
		<result property="address.city" column="city"/>
		<result property="address.state" column="state"/>
		<result property="address.zip" column="zip"/>
		<result property="address.country" column="country"/>
	</resultMap>
	
	
	<sql id="selectJoinAdressSql">
		select Stud_id, name, email, phone, A.addr_id, street, city, state, zip, country
		from students s left outer join addresses A on s.ADDR_ID=a.ADDR_ID
	</sql>
	
 	<select id="selectStudentByNoForResultMapExtends" parameterType="Student" 
					resultMap="StudentWithAdressResult">
		<include refid="selectJoinAdressSql"></include>
		<include refid="where"></include>
	</select> 
	
	<select id="selectStudentByNoForResultMapExtends2" parameterType="int" 
					resultMap="StudentWithAdressResult">
		select Stud_id, name, email, phone, A.addr_id, street, city, state, zip, country
		from students s join addresses A on s.ADDR_ID=a.ADDR_ID
		where stud_id=#{studId};	
	</select>

	<select id="selectStudentByAllForResultMap" resultMap="StudentResult">
		<include refid="selectSql"></include>
	</select>
	<!-- hashMap -->
	<select id="selectStudentByAllHashMap" resultType="map">
		<include refid="selectSql"></include>
	</select>
	
	
	
	
</mapper>